swagger: "2.0"
info:
  description: "This is an inaccurate mockup of the SBUX VAC"
  version: "0.0.1"
  title: "Fake VAC and InfoBlox"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "craig.j.smith@dell.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v2"
tags:
- name: "nodes"
  description: "node entries"
- name: "ip"
  description: "Get an IP from the pool"
schemes:
- "https"
- "http"
paths:
  /nodes:
    post:
      tags:
      - "nodes"
      summary: "Add a new node"
      description: ""
      operationId: "addNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Node object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Node"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Node"
        "405":
          description: "Invalid input"
        "500":
          description: "Node not created"
    get:
      tags:
      - "nodes"
      summary: "Get all nodes"
      description: ""
      operationId: "getNodes"
      parameters:
        - in: query
          name: status
          type: string
          description: "filter on node status"
      produces:
      - "application/json"
      responses:
        "400":
          description: "Invalid call"
  /nodes/{serviceTag}:
    get:
      tags:
      - "nodes"
      summary: "Find node by serviceTag"
      description: "Returns a single node"
      operationId: "getNodeByServiceTag"
      produces:
      - "application/json"
      parameters:
      - name: "serviceTag"
        in: "path"
        description: "serviceTag of node to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Node"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Node not found"
    put:
      tags:
      - "nodes"
      summary: "Updates a node"
      description: ""
      operationId: "updateNode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "serviceTag"
        in: "path"
        description: "serviceTag of node that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Node object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Node"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Node"
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "nodes"
      summary: "Deletes a node"
      description: ""
      operationId: "deleteNode"
      produces:
      - "application/json"
      parameters:
      - name: "serviceTag"
        in: "path"
        description: "Node serviceTag to delete"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Node not found"
  /ips:
    post:
      tags:
      - "ip"
      summary: "Add a new ip"
      description: ""
      operationId: "addIp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ip object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Ip"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Ip"
        "405":
          description: "Invalid input"
        "500":
          description: "ip not created"
    get:
      tags:
      - "ip"
      summary: "Get all nodes"
      description: ""
      operationId: "getIps"
      produces:
      - "application/json"
      responses:
        "400":
          description: "Invalid call"
  /next_ip:
    get:
      tags:
      - "ip"
      summary: "Get and remove ip"
      description: "get the next IP and remove it from the list"
      operationId: "nextIp"
      produces:
      - "application/json"
      responses:
        "400":
          description: "Invalid call"
  /ips/{address}:
    delete:
      tags:
      - "ip"
      summary: "Deletes an ip"
      description: ""
      operationId: "deleteIp"
      produces:
      - "application/json"
      parameters:
      - name: "address"
        in: "path"
        description: "ip address to delete"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "ip not found"
definitions:
  Node:
    type: "object"
    required:
    - "serviceTag"
    - "hostName"
    - "fqdn"
    properties:
      serviceTag:
        type: "string"
        example: "hj5324j"
      hostName:
        type: "string"
        example: "beep"
      vCenter:
        type: "string"
        example: "vcenter.node.net"
      clusterName:
        type: "string"
        example: "cluster-1"
      vendor:
        type: "string"
        example: "Dell"
      idracIp:
        type: "string"
        example: "10.10.1.1"
      hostIp:
        type: "string"
        example: "10.10.10.1"
      fqdn:
        type: "string"
        example: "beep.home.net"
      status:
        type: "string"
        description: "node status"
        enum:
        - "processing"
        - "deploying"
        - "production"
  Ip:
    type: "object"
    properties:
      address:
        type: "string"
        example: "192.168.0.10"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
